# -*- coding: utf-8 -*-
"""Hotel Reservation Analysis with SQL: Yoon Thiri Ko.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EVbMPqWMX0dYyGhGo8cKtREHV5T0ktzz
"""

# Commented out IPython magic to ensure Python compatibility.
# Import necessary libraries and extensions
# %load_ext sql
import csv, sqlite3
import pandas as pd

# Connect to SQLite database
con = sqlite3.connect("HotelReservationAnalysis.db")
cur = con.cursor()

# Commented out IPython magic to ensure Python compatibility.
# Load SQL extension
# %sql sqlite:///HotelReservationAnalysis.db

# Load dataset into pandas DataFrame
df = pd.read_csv('HotelReservationDataset.csv')
df.head(5)

# Convert DataFrame to SQL database
df.to_sql("hotel_reservation_data", con, if_exists='replace', index=False,method="multi")

# Commented out IPython magic to ensure Python compatibility.
# Verify the data loaded correctly
# %sql SELECT * FROM hotel_reservation_data limit 5;

"""1. What is the total number of reservations in the dataset?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT COUNT(Booking_ID) FROM hotel_reservation_data AS Total_Number_of_Reservations

"""2. Which meal plan is the most popular among guests?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT type_of_meal_plan, COUNT(*) AS count FROM hotel_reservation_data GROUP BY type_of_meal_plan ORDER BY count DESC LIMIT 1

"""3. What is the average price per room for reservations involving children?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT ROUND(AVG(avg_price_per_room),2) FROM hotel_reservation_data WHERE no_of_children > 0

"""4. How many reservations were made for the year 20XX (replace XX with the desired year)?"""

# Convert arrival_date to datetime and extract year
df['arrival_date'] = pd.to_datetime(df['arrival_date'], format='%d-%m-%Y')
df['year'] = df['arrival_date'].dt.year
df.head(2)

# Ensure the DataFrame includes the year column and update the SQL table
df.to_sql("hotel_reservation_data", con, if_exists='replace', index=False,method="multi")

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT year, COUNT(*) as Reservations FROM hotel_reservation_data GROUP BY year

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT COUNT(*) as Reservations FROM hotel_reservation_data WHERE year = 2018

"""5. What is the most commonly booked room type?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT room_type_reserved, COUNT(room_type_reserved) AS count FROM hotel_reservation_data GROUP BY room_type_reserved ORDER BY count DESC LIMIT 1

"""6. How many reservations fall on a weekend (no_of_weekend_nights > 0)?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT COUNT(*) AS ReservationsOnWeekend FROM hotel_reservation_data WHERE no_of_weekend_nights > 0

"""7. What is the highest and lowest lead time for reservations?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT MAX(lead_time) AS HighestLeadTime, MIN(lead_time) AS LowestLeadTime FROM hotel_reservation_data

"""8. What is the most common market segment type for reservations?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT market_segment_type, COUNT(market_segment_type) AS Count FROM hotel_reservation_data GROUP BY market_segment_type ORDER BY Count DESC LIMIT 1

"""9. How many reservations have a booking status of "Confirmed"?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT COUNT(*) FROM hotel_reservation_data WHERE booking_status = 'Not_Canceled'

"""10. What is the total number of adults and children across all reservations?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT SUM(no_of_adults), SUM(no_of_children) FROM hotel_reservation_data

"""11. What is the average number of weekend nights for reservations involving children?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT AVG(no_of_weekend_nights) FROM hotel_reservation_data WHERE no_of_children >0

"""12. How many reservations were made in each month of the year?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT strftime('%m', arrival_date) AS month, COUNT(*) FROM hotel_reservation_data GROUP BY month ORDER BY month

"""13. What is the average number of nights (both weekend and weekday) spent by guests for each room type?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT room_type_reserved, ROUND(AVG(no_of_weekend_nights + no_of_week_nights),2) AS avg_nights FROM hotel_reservation_data GROUP BY room_type_reserved

"""14. For reservations involving children, what is the most common room type, and what is the average price for that room type?"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT room_type_reserved, COUNT(room_type_reserved) AS Count, AVG(avg_price_per_room) AS AvgPrice FROM hotel_reservation_data WHERE no_of_children > 0 GROUP BY room_type_reserved ORDER BY Count DESC LIMIT 1

"""15. Find the market segment type that generates the highest average price per room."""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT market_segment_type, ROUND(AVG(avg_price_per_room),2) AS AvgPrice FROM hotel_reservation_data GROUP BY market_segment_type ORDER BY AvgPrice DESC LIMIT 1